package Data;

import Koneksi.Server;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author XXxxXX
 */
public class DataPegawai extends javax.swing.JInternalFrame {

    /**
     * Creates new form DataPegawai
     */
    public DataPegawai() {
        initComponents();
        showPegawai();
        tfId.setVisible(false);
    }
    
    public void showPegawai(){
        DefaultTableModel dataModel =(DefaultTableModel) tabelPegawai.getModel();
        int lengthRow = dataModel.getRowCount();
        for (int n=0; n<lengthRow; n++) {
            dataModel.removeRow(0); 
        }
        try{
            Connection conn = (Connection) Server.serverData();
            Statement st = conn.createStatement();
            String sql = "SELECT id_pegawai, nama_pegawai, email_pegawai from pegawai ORDER BY nama_pegawai ASC";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()){
                dataModel.addRow(new Object [] {
                    rs.getString(1),
                    rs.getString(2),
                    rs.getString(3)
                });
            }
            rs.close();
            st.close();
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Error : " + e);
        }
    }
    
    public void hapusData(){
        try{
            Connection conn = (Connection) Server.serverData();
            Statement st = conn.createStatement();
            String sql = "DELETE FROM pegawai where id_pegawai='"+tfId.getText()+"'";
            st.executeUpdate(sql);
            showPegawai();
            st.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error : " + e);
        }
    }
    
    public void cariPegawai(){
        DefaultTableModel dataModel =(DefaultTableModel) tabelPegawai.getModel();
        int lengthRow = dataModel.getRowCount();
        for (int n=0; n<lengthRow; n++) {
            dataModel.removeRow(0); 
        }
        try{
            Connection conn = (Connection) Server.serverData();
            Statement st = conn.createStatement();
            String sql = "SELECT id_pegawai, nama_pegawai, email_pegawai from pegawai where nama_pegawai like '%"+jTextField1.getText()+"%'";
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()){
                dataModel.addRow(new Object [] {
                    rs.getString(1),
                    rs.getString(2),
                    rs.getString(3)
                });
            }
            rs.close();
            st.close();
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Error : " + e);
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtJudul = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelPegawai = new javax.swing.JTable();
        btnHapus = new javax.swing.JButton();
        tfId = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));

        txtJudul.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        txtJudul.setText("DATA PEGAWAI");

        tabelPegawai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Pegawai", "Nama Pegawai", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelPegawai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabelPegawaiMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabelPegawai);

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        tfId.setEditable(false);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jLabel1.setText("Masukkan Nama Pegawai Untuk Mencari");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addComponent(txtJudul))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(txtJudul)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabelPegawaiMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelPegawaiMousePressed
        // TODO add your handling code here:
        
        int row = tabelPegawai.rowAtPoint(evt.getPoint());
        tfId.setText(tabelPegawai.getValueAt(row, 0).toString());
    }//GEN-LAST:event_tabelPegawaiMousePressed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        
        if (tfId.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Harap Pilih Data Yang Akan Diubah !");
        }else{
            int confirm = JOptionPane.showConfirmDialog(null, "Apakah Anda Yakin Akan Menghapus Data Ini ?", "KONFIRMASI", YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION)  {
                hapusData();
                JOptionPane.showMessageDialog(null, "DATA BERHASIL DIHAPUS");
                tfId.setText("");
            }else{
                tfId.setText("");
                JOptionPane.showMessageDialog(null, "DATA TIDAK JADI DIHAPUS");
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        
        if (!"".equals(jTextField1.getText())) {
            cariPegawai();
        } else {
            showPegawai();
        }
    }//GEN-LAST:event_jTextField1KeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tabelPegawai;
    private javax.swing.JTextField tfId;
    private javax.swing.JLabel txtJudul;
    // End of variables declaration//GEN-END:variables
}
